/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oce;

import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class Admission extends javax.swing.JFrame {

    private String Password;
    private String Username;
    private String Name;
    final String DB_URL = "jdbc:derby:DB;create=true;";  //Database URL
    final String USER = "app";
    final String PASS = "app";
    boolean Changing = false;
    DefaultListModel listModel;

    public Admission() {
        initComponents();
    }

    public Admission(String U, String N, String P) {
        initComponents();
        Password = P;
        Username = U;
        Name = N;
        Welcome.setText("Welcome " + Name);
        AllFiles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Welcome = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AppL = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        Progress = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Search = new javax.swing.JTextField();
        CS = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Sign Out");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 140, -1));

        jButton2.setText("Change Password");
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 140, -1));
        getContentPane().add(Welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 20));

        jButton3.setText("Add File");
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 150, -1));

        jButton4.setText("Open File");
        jButton4.setOpaque(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 150, -1));

        jScrollPane1.setViewportView(AppL);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 150, 190));

        Progress.setColumns(20);
        Progress.setRows(5);
        jScrollPane2.setViewportView(Progress);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 340, 210));

        jLabel1.setText("Actions:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 90, 20));

        jLabel2.setText("Applications:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 80, -1));

        jButton5.setText("Delete File");
        jButton5.setOpaque(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 150, -1));

        jLabel3.setText("Search:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 94, 50, 20));

        Search.setOpaque(false);
        Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyReleased(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 170, -1));

        CS.setText("Case Sensitive");
        CS.setOpaque(false);
        getContentPane().add(CS, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 120, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oce/Clouds.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void SetPassword(String P) {
        Password = P;
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (Changing == false) {
            Changing = true;
            ChangePass CP = new ChangePass(Password, Username, this);
            CP.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to sign out?", "Done?", JOptionPane.YES_NO_OPTION);
        if (reply == 1) {
            return;
        }
        Login L = new Login();
        L.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void AllFiles() {
        File directory = new File("C:\\OCE\\");
        File[] fList = directory.listFiles();
        listModel = new DefaultListModel();
        AppL.setModel(listModel);
        for (int i = 0; i < fList.length; i++) {
            listModel.addElement(fList[i].getName());
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser FC = new JFileChooser();
        File F;
        if (FC.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            F = FC.getSelectedFile();
            File Save = new File("C:\\OCE\\" + F.getName());
            Save.getParentFile().mkdirs();
            try {
                Save.createNewFile();
            } catch (IOException ex) {
                System.out.println("Error0");
                ex.printStackTrace();
            }
            try {
                Save.createNewFile();
            } catch (IOException ex) {
                System.out.println("Error1");
                ex.printStackTrace();
            }
            try {
                copyFile(F, Save);
            } catch (IOException ex) {
                System.out.println("Error2");
                ex.printStackTrace();
            }
            Progress.setText(Progress.getText() + "Downloaded " + F.getName() + " from \n" + F.getAbsolutePath() + "\n");
            System.out.println("Done");
            AllFiles();
        } else {
            return;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int I[] = AppL.getSelectedIndices();
        if (I.length == 0) {
            JOptionPane.showMessageDialog(this, "Please select a file.");
            return;
        }
        if (I.length > 1) {
            JOptionPane.showMessageDialog(this, "Please select only one file.");
            return;
        }
        String n = listModel.getElementAt(I[0]).toString();
        File F = new File("C:\\OCE\\" + n);
        try {
            Desktop.getDesktop().open(F);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Could not open file.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int I[] = AppL.getSelectedIndices();
        if (I.length == 0) {
            JOptionPane.showMessageDialog(this, "Please select a file.");
            return;
        }
        if (I.length > 1) {
            JOptionPane.showMessageDialog(this, "Please select only one file.");
            return;
        }
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + listModel.getElementAt(I[0]) + "?", "Delete?", JOptionPane.YES_NO_OPTION);
        if (reply == 1) {
            return;
        }
        String n = listModel.getElementAt(I[0]).toString();
        File F = new File("C:\\OCE\\" + n);
        F.delete();
        AllFiles();
        Progress.setText(Progress.getText() + "Deleted " + F.getName() + "\n");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyReleased
        if (CS.isSelected()) {
            AllFiles();
            String S = Search.getText();
            if(S.equals(""))
            {
                return;
            }
            int size = listModel.getSize();
            ArrayList<String> A = new ArrayList<String>();
            for (int i = 0; i < size; i++) {
                for (int a = 0; a < S.length(); a++) {
                    if (a > listModel.getElementAt(i).toString().length() - 1) {
                        break;
                    }
                    if (listModel.getElementAt(i).toString().toLowerCase().charAt(a) == S.charAt(a)) {
                        if (a == S.length() - 1) {
                            A.add(listModel.getElementAt(i).toString());
                        }
                    } else {
                        break;
                    }
                }
            }
            listModel = new DefaultListModel();
            AppL.setModel(listModel);
            for (int i = 0; i < A.size(); i++) {
                listModel.addElement(A.get(i));
            }
        } else {
            AllFiles();
            String S = Search.getText();
            int size = listModel.getSize();
            ArrayList<String> A = new ArrayList<String>();
            for (int i = 0; i < size; i++) {
                if (listModel.getElementAt(i).toString().toLowerCase().contains(S.toLowerCase())) {
                    A.add(listModel.getElementAt(i).toString());
                }
            }
            listModel = new DefaultListModel();
            AppL.setModel(listModel);
            for (int i = 0; i < A.size(); i++) {
                listModel.addElement(A.get(i));
            }
        }
    }//GEN-LAST:event_SearchKeyReleased

    private static void copyFile(File source, File dest) throws IOException {
        InputStream input = null;
        OutputStream output = null;
        try {
            input = new FileInputStream(source);
            output = new FileOutputStream(dest);
            byte[] buf = new byte[1024];
            int bytesRead;
            while ((bytesRead = input.read(buf)) > 0) {
                output.write(buf, 0, bytesRead);
            }
        } finally {
            input.close();
            output.close();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admission().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList AppL;
    private javax.swing.JCheckBox CS;
    private javax.swing.JTextArea Progress;
    private javax.swing.JTextField Search;
    private javax.swing.JLabel Welcome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
